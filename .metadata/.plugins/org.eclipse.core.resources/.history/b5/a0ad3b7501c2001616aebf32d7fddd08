package day13;

import java.io.IOException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.HashMap;
import java.util.Map;

public class D13Q1 {

	public static void main(String[] args) throws IOException,
			NoSuchAlgorithmException {
		String salt = "abc";
		Map<Integer, String> possibles = new HashMap<Integer, String>();
		int found = 0;
		int ix = 0;
		while (found < 64) {
			String in = salt + ix++;
			byte[] out = MessageDigest.getInstance("MD5").digest(in.getBytes());
			String possibleHash = getString(out);
			if(isPossibleHash(possibleHash)){
				// add to map using the current index as the hash
			}
		}
	}
	
	private static String getString(byte[] toString){
		String result = "";
		for(int i = 0; i<toString.length; i++){
		result += String.format("%02x", toString[i]);	
		}
		return result;
	}
	
	
	private static boolean isPossibleHash(String input){
		char[] toCheck = input.toCharArray();
		char a = toCheck[0];
		char b = toCheck[1];
		char c = toCheck[2];
		
		for(int i = 2; i <= input.length(); i++){
			if(a == b && b==c){
				return true;
			}
			a=b;
			b=c;
			c=toCheck[i];
		}
		
		return false;
	}
}
